{
	"name": "calculo popularidad satisfaccion",
	"properties": {
		"activities": [
			{
				"name": "carga_calculo_popularidad_satisfaccion",
				"type": "Script",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"linkedServiceName": {
					"referenceName": "farma",
					"type": "LinkedServiceReference",
					"parameters": {
						"bbdd": "farma"
					}
				},
				"typeProperties": {
					"scripts": [
						{
							"type": "Query",
							"text": "\nWITH ResenasPorSemana AS (\n    SELECT \n        l.place_id,\n        DATEADD(day, -DATEPART(weekday, TRY_CONVERT(date, l.date_review)), TRY_CONVERT(date, l.date_review)) AS semana,\n        COUNT(*) AS num_resenas_semana,\n        count(review) as num_comentarios,\n        count(response) as num_respuestas,        \n        SUM(CASE s.rating WHEN '5.0' THEN 1 ELSE 0 END) AS num_resenas_5,\n        SUM(CASE s.rating WHEN '4.0' THEN 1 ELSE 0 END) AS num_resenas_4,\n        SUM(CASE s.rating WHEN '3.0' THEN 1 ELSE 0 END) AS num_resenas_3,\n        SUM(CASE s.rating WHEN '2.0' THEN 1 ELSE 0 END) AS num_resenas_2,\n        SUM(CASE s.rating WHEN '1.0' THEN 1 ELSE 0 END) AS num_resenas_1\n    FROM MAESTROS.LINK_DATOS_PLACE_REVIEWS l \n    JOIN MAESTROS.SAT_DATOS_PLACE_REVIEW_TEXTOS s \n        ON s.hash_key_review_place = l.hash_key_review_place \n        AND s.ACTIVE_RECORD_INDICATOR = 'S'\n    GROUP BY \n        l.place_id,\n        DATEADD(day, -DATEPART(weekday, TRY_CONVERT(date, l.date_review)), TRY_CONVERT(date, l.date_review) ) \n),\nRankedResenasPorSemana AS (\n    SELECT *,\n        ROW_NUMBER() OVER(PARTITION BY place_id ORDER BY num_resenas_semana DESC) AS Rank\n    FROM ResenasPorSemana\n), ResenasPorPlace as (\nSELECT\n    r.place_id,    \n    MIN(r.semana) AS desde,\n    MAX(r.semana) AS hasta,\n    TRY_CONVERT (float, DATEDIFF(week, MIN(r.semana), MAX(r.semana)) ) AS semanas_historia,\n    TRY_CONVERT (float, COUNT(DISTINCT r.semana) ) AS num_semanas_con_resenas,\n    TRY_CONVERT(FLOAT,SUM(CASE WHEN r.num_resenas_5 > 0 THEN 1 ELSE 0 END)  ) AS num_semanas_con_resenas_5,\n    TRY_CONVERT(FLOAT,SUM(CASE WHEN r.num_resenas_1 > 0 THEN 1 ELSE 0 END) ) AS num_semanas_con_resenas_1,\n    TRY_CONVERT(FLOAT,SUM(r.num_resenas_semana) ) AS num_resenas,\n    TRY_CONVERT(FLOAT,SUM(r.num_comentarios)) AS comentarios,\n    TRY_CONVERT(FLOAT, SUM(r.num_respuestas) ) AS num_respuestas,\n    SUM(TRY_CONVERT (float,r.num_resenas_5) ) AS num_resenas_5,\n    SUM(TRY_CONVERT (float,r.num_resenas_4)) AS num_resenas_4,\n    SUM(TRY_CONVERT (float,r.num_resenas_3)) AS num_resenas_3,\n    SUM(TRY_CONVERT (float,r.num_resenas_2)) AS num_resenas_2,\n    SUM(TRY_CONVERT (float,r.num_resenas_1)) AS num_resenas_1,\n    TRY_CONVERT (float, SUM(CASE WHEN r.Rank = 1 THEN r.num_resenas_semana ELSE 0 END)) AS TotalResenasEnSemanaMasResenas,\n    TRY_CONVERT (float, SUM(CASE WHEN r.Rank = 1 THEN r.num_resenas_5 ELSE 0 END) ) AS Resenas_5_EnSemanaMasResenas,\n    TRY_CONVERT (float, SUM(CASE WHEN r.Rank = 1 THEN r.num_resenas_1 ELSE 0 END) )  AS Resenas_1_EnSemanaMasResenas,\n    -- Calcular el número de semanas con reseñas en el último año\n    TRY_CONVERT(float, SUM(CASE \n        WHEN DATEDIFF(month, r.semana, GETDATE()) < 12 THEN 1\n        ELSE 0 \n    END)) AS num_semanas_con_resenas_ultimo_12_meses,\n    TRY_CONVERT(FLOAT,SUM(CASE \n        WHEN DATEDIFF(month, r.semana, GETDATE()) < 12 THEN r.num_resenas_semana\n        ELSE 0 \n    END)) AS num_resenas_ultimo_12_meses\nFROM RankedResenasPorSemana r\nGROUP BY r.place_id )\nSELECT \n\tplace_id,\n    desde,\n    hasta, \n    semanas_historia,\n    num_semanas_con_resenas semanas_con_resenas,\n    num_resenas, \n    case \n    when semanas_historia > 52 then num_semanas_con_resenas_ultimo_12_meses/52 \n    when semanas_historia > 0 then num_semanas_con_resenas_ultimo_12_meses/semanas_historia \n    else 0 end  ratio_semanas_con_resenas_ult_12m,\n    case when num_resenas >0 then num_resenas_ultimo_12_meses/num_resenas else 0 end  ratio_resenas_ult_12m,\n    case when num_resenas >0 then comentarios/num_resenas else 0 end  ratio_resenas_comentadas,\n    case when comentarios >0 then num_respuestas/comentarios else 0 end  ratio_resenas_respondidas,\n    TotalResenasEnSemanaMasResenas max_rese_semana,\n    case when num_resenas >9 then (Resenas_5_EnSemanaMasResenas+ Resenas_1_EnSemanaMasResenas) /num_resenas else 0 end ratio_manipulacion,\n    case when num_resenas >9 and (Resenas_5_EnSemanaMasResenas+ Resenas_1_EnSemanaMasResenas) >0 then Resenas_5_EnSemanaMasResenas/(Resenas_5_EnSemanaMasResenas+ Resenas_1_EnSemanaMasResenas) else 0 end ratio_manipulacion_positiva,\n    case when num_resenas >9 and (Resenas_5_EnSemanaMasResenas+ Resenas_1_EnSemanaMasResenas) >0 then Resenas_1_EnSemanaMasResenas/(Resenas_5_EnSemanaMasResenas+ Resenas_1_EnSemanaMasResenas) else 0 end ratio_manipulacion_negativa,\n    num_resenas_5*5+num_resenas_4*4+num_resenas_3*3+num_resenas_2*2+num_resenas_1 popularidad_teorica,\n    (num_resenas_5-Resenas_5_EnSemanaMasResenas) *5+num_resenas_4*4+num_resenas_3*3+num_resenas_2*2+(num_resenas_1-Resenas_1_EnSemanaMasResenas) popularidad_real,\n    case when num_resenas>0 then (num_resenas_5*5+num_resenas_4*4+num_resenas_3*3+num_resenas_2*2+num_resenas_1)/num_resenas else 0 end ranking_teorico,\n    case \n\t    when num_resenas>9 then ((num_resenas_5-Resenas_5_EnSemanaMasResenas) *5+num_resenas_4*4+num_resenas_3*3+num_resenas_2*2+(num_resenas_1-Resenas_1_EnSemanaMasResenas))/num_resenas\n\t    when  num_resenas>0 then (num_resenas_5*5+num_resenas_4*4+num_resenas_3*3+num_resenas_2*2+num_resenas_1)/num_resenas\n\t    else 0 end ranking_real,    \n\t(num_resenas_5-Resenas_5_EnSemanaMasResenas) *5+num_resenas_4*4+num_resenas_3*3-num_resenas_2*2-(num_resenas_1-Resenas_1_EnSemanaMasResenas)*5 as satisfaccion_clientes_real\n\tinto calculos.datos_place_manipulacion_review_new\n\tFROM ResenasPorPlace;\ndrop table calculos.datos_place_manipulacion_review;\n\n\nEXEC farma.sys.sp_rename N'farma.calculos.datos_place_manipulacion_review_new', N'datos_place_manipulacion_review', 'OBJECT';\n\n\n\nSELECT place_id,\n    DATEADD(day, -DATEPART(weekday, TRY_CONVERT(date, date_review)), TRY_CONVERT(date, date_review)) AS semana , count(*) num_resenas_semana,\n    sum(case s.rating when '5.0' then 1 else 0 end) num_resenas_5,\n    sum(case s.rating when '1.0' then 1 else 0 end) num_resenas_1    \ninto calculos.datos_evolucion_resenas_new\n    FROM\n    MAESTROS.LINK_DATOS_PLACE_REVIEWS l \njoin MAESTROS.SAT_DATOS_PLACE_REVIEW_TEXTOS s on s.hash_key_review_place = l.hash_key_review_place and s.ACTIVE_RECORD_INDICATOR ='S' \n   group by DATEADD(day, -DATEPART(weekday, TRY_CONVERT(date, date_review)), TRY_CONVERT(date, date_review)), place_id\n\n \n\n  \ndrop table calculos.datos_evolucion_resenas;\n\n EXEC farma.sys.sp_rename N'farma.calculos.datos_evolucion_resenas_new', N'datos_evolucion_resenas', 'OBJECT';\n   \n\n"
						}
					],
					"scriptBlockExecutionTimeout": "02:00:00"
				}
			}
		],
		"folder": {
			"name": "4 DWH- DM"
		},
		"annotations": [],
		"lastPublishTime": "2024-03-17T19:34:22Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}